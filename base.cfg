[buildout]
extensions = mr.developer
parts +=
    instance
    test
    coverage
    test-coverage
#    code-analysis
    dependencychecker

develop = .
sources-dir = extras
auto-checkout =

[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8080
eggs =
    Plone
    Pillow
    plone.app.debugtoolbar
    wildcard.media[test]

[test]
recipe = zc.recipe.testrunner
eggs = ${instance:eggs}
initialization =
    os.environ['TZ'] = 'UTC'
defaults = ['-s', 'wildcard.media', '--auto-color', '--auto-progress']

[coverage]
recipe = zc.recipe.egg
eggs = coverage

[test-coverage]
recipe = collective.recipe.template
input = inline:
    #!/bin/bash
    export TZ=UTC
    ${buildout:directory}/bin/coverage run bin/test $*
    ${buildout:directory}/bin/coverage html
    ${buildout:directory}/bin/coverage report -m --fail-under=90
    # Fail (exit status 1) if coverage returns exit status 2 (this happens
    # when test coverage is below 100%.
output = ${buildout:directory}/bin/test-coverage
mode = 755

[code-analysis]
recipe = plone.recipe.codeanalysis[recommended]
directory = ${buildout:directory}/wildcard
flake8-exclude=bootstrap.py,bootstrap-buildout.py,docs,bin,*.egg,setup.py,overrides
flake8-max-complexity = 20
flake8-extensions =
    flake8-coding
    flake8-debugger
    flake8-print
    flake8-isort

[dependencychecker]
recipe = zc.recipe.egg
eggs =
    z3c.dependencychecker
    wildcard.media
scripts = dependencychecker
